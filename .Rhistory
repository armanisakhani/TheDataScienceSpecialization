MyData <- read.csv("getdata_data_ss06hid.csv")
setwd("03- Getting and Cleaning Data/")
MyData <- read.csv("getdata_data_ss06hid.csv")
names(MyData)
rm(list=ls())
setwd("..")
setwd("03- Getting and Cleaning Data/")
MyData <- read.csv("getdata_data_ss06hid.csv")
sum(values[!is.na(values)]>1000000)
values <- MyData$VAL
sum(values[!is.na(values)]>1000000)
View(MyData)
sum(!is.na(MyData) & (MyData > 1000000))
sum(!is.na(MyData) & (MyData[is.integer(MyData)] > 1000000))
View(MyData)
sum(!is.na(MyData[,-1]) & (MyData[,-1] > 1000000))
dat <- read.xlsx("getdata_data_DATA.gov_NGAP2.xlsx" ,sheetIndex = 1, rowIndex= 18:23 , colIndex=7:15 , header = T)
install.packages("xlsx")
install.packages("xlsx")
install.packages("C:/Users/Arman/Downloads/xlsx_0.5.7.tar.gz", repos = NULL, type = "source")
install.packages("rJava")
options(repos=structure(c(CRAN="http://cran.um.ac.ir/")))
install.packages("xlsx")
install.packages("xlsx")
library(xlsx)
dat <- read.xlsx("getdata_data_DATA.gov_NGAP2.xlsx" ,sheetIndex = 1, rowIndex= 18:23 , colIndex=7:15 , header = T)
library(xlsx)
install.packages('rJava', repos='http://cran.um.ac.ir/')
install.packages('rJava', repos='http://cran.um.ac.ir/')
library(xlsx)
library(xlsx)
install.packages('rJava', repos='http://cran.repo.bppt.go.id/')
remove.packages(rJava)
remove.packages("rJava")
install.packages("rJava")
install.packages('rJava', repos='http://cran.repo.bppt.go.id/')
install.packages('rJava', repos='http://cran.repo.bppt.go.id/')
install.packages('rJava', repos='http://cran.um.ac.ir/')
library("rJava", lib.loc="~/R/win-library/3.2")
library("rJavax", lib.loc="~/R/win-library/3.2")
install.packages('rJavax', repos='http://cran.um.ac.ir/')
library("rJava", lib.loc="~/R/win-library/3.2")
trackback
trackback()
traceback()
Sys.which("javac")
Sys.setenv(JAVA_HOME='C:\Program Files\Java\jdk1.7.0_51\jre')
library(xlsx)
dat <- read.xlsx("getdata_data_DATA.gov_NGAP2.xlsx" ,sheetIndex = 1, rowIndex= 18:23 , colIndex=7:15 , header = T)
setwd("03- Getting and Cleaning Data/")
dat <- read.xlsx("getdata_data_DATA.gov_NGAP2.xlsx" ,sheetIndex = 1, rowIndex= 18:23 , colIndex=7:15 , header = T)
sum(dat$Zip*dat$Ext,na.rm=T)
dat <- read.xlsx("getdata_data_DATA.gov_NGAP.xlsx" ,sheetIndex = 1, rowIndex= 18:23 , colIndex=7:15 , header = T)
dat <- read.xlsx("getdata_data_DATA.gov_NGAP2.xlsx" ,sheetIndex = 1, rowIndex= 18:23 , colIndex=7:15 , header = T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx" , destfile = "getdata_data_DATA.gov_NGAP.xlsx" )
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx" , destfile = "getdata_data_DATA.gov_NGAP.xlsx" )
dat <- read.xlsx("getdata_data_DATA.gov_NGAP.xlsx" ,sheetIndex = 1, rowIndex= 18:23 , colIndex=7:15 , header = T)
dat <- read.xlsx("getdata_data_DATA.gov_NGAP2.xlsx" ,sheetIndex = 1, rowIndex= 18:23 , colIndex=7:15 , header = T)
sum(dat$Zip*dat$Ext,na.rm=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx" , destfile = "getdata_data_DATA.gov_NGAP.xlsx" )
dat <- read.xlsx("getdata_data_DATA.gov_NGAP.xlsx" ,sheetIndex = 1, rowIndex= 18:23 , colIndex=7:15 , header = T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx" , destfile = "getdata_data_DATA.gov_NGAP.xlsx", mode='wb')
dat <- read.xlsx("getdata_data_DATA.gov_NGAP.xlsx" ,sheetIndex = 1, rowIndex= 18:23 , colIndex=7:15 , header = T)
sum(dat$Zip*dat$Ext,na.rm=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml " , destfile = "getdata_data_restaurants.xml" )
library(XML)
doc <- xmlTreeParse("getdata_data_restaurants.xml" , useInternal = T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
zipcode <-as.integer(xpathSApply(rootNode , "//zipcode" , xmlValue))
sum(zipcode==21231)
DT <- fread("data_2.csv")
doc$pwgtp15
DT
DT <- read.csv("data_2.csv")
doc$pwgtp15
names(DT)
DT$pwgtp15
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(rowMeans(DT)[DT$SEX==1])
system.time(rowMeans(DT)[DT$SEX==2])
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
DT <- as.data.table(read.csv("data_2.csv"))
library(data.table)
DT <- as.data.table(read.csv("data_2.csv"))
DT$pwgtp15
DT
DT[,mean(pwgtp15),by=SEX]
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
sapply(split(DT$pwgtp15,DT$SEX),mean)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
tapply(DT$pwgtp15,DT$SEX,mean)
mean(DT$pwgtp15,by=DT$SEX)
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(rowMeans(DT)[DT$SEX==1])
system.time(rowMeans(DT)[DT$SEX==2])
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(rowMeans(DT)[DT$SEX==1])
rowMeans(DT)
rowMeans(DT)
system.time(rowMeans(DT)[DT$SEX==2])
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
MyData <- read.csv("getdata_data_ss06hid.csv")
sapply(X = MyData, FUN = function(x) sum(x>1000000, na.rm = T))
MyData <- MyData[,-1]
sapply(X = MyData, FUN = function(x) sum(x>1000000, na.rm = T))
sum(sapply(X = MyData, FUN = function(x) sum(x>1000000, na.rm = T)))
sum(!is.na(MyData[,-1]) & (MyData[,-1] > 1000000))
sum(!is.na(MyData) & (MyData > 1000000))
sum(!is.na(MyData) & (MyData > 10000000))
sum(!is.na(MyData) & (MyData > 1000000))
sum((sapply(X = MyData, FUN = function(x) sum(x>1000000, na.rm = T)))>0)
values <- MyData$VAL
sum(values>1000000)
sum(values>1000000, na.rm = T)
MyData <- read.csv("getdata_data_ss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv" ,destfile = "getdata_data_ss06hid.csv" )
MyData <- read.csv("getdata_data_ss06hid.csv")
MyData <- MyData[,-1]
sum((sapply(X = MyData, FUN = function(x) sum(x>1000000, na.rm = T)))>0)
sum(sapply(X = MyData, FUN = function(x) sum(x>1000000, na.rm = T)))
values <- MyData$VAL
sum(values>1000000, na.rm = T)
sum(values>100000, na.rm = T)
sum(values>10000, na.rm = T)
sum(values>1000, na.rm = T)
sum(values>10, na.rm = T)
sum(values[!is.na(values)]==24)
MyData <- read.csv("getdata_data_ss06hid.csv")
names(MyData)
values <- MyData$VAL
sum(values[!is.na(values)]==24)
MyData.FES <- MyData$FES
View(MyData.FES)
MyData.FES[1:10]
View(MyData)
sum(dat$Zip*dat$Ext,na.rm=T)
sum(zipcode==21231)
